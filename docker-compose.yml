version: '3'

services:
  web:
    build: .
    command: gunicorn --bind 0.0.0.0:5000 --timeout 600 --workers 3 --threads 3 wsgi:app
    volumes:
      # - .:/app
      - app:/app
    environment:
      FLASK_ENV: production
    restart: always
    deploy:
      resources:
        limits:
          memory: 10G
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=mytlschallenge"

  traefik:
    image: "traefik"
    restart: always
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik_network

volumes:
  traefik_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/disks/disk-data/crm/traefik

  app:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/disks/disk-data/crm/app


networks:
  traefik_network:
    name: traefik_network